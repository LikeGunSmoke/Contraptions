/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Adamante (https://sketchfab.com/Adamant6686)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/fireball-energy-sphere-4d8f95f28398453d8d5620fe301d39f8
title: Fireball | energy sphere
*/

import React, { useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import { useSphere } from '@react-three/cannon';
import { useSelector } from 'react-redux';

export default function Fireball({ ...props }) {

  const shoot_r = useSelector((state) => state.level1[1].shoot);
  const shoot_l = useSelector((state) => state.level1[2].shoot);
  const reset = useSelector((state) => state.level1[3].reset);

  const [group, api] = useSphere(() => ({
    type: 'Kinematic',
    args: 1,
    ...props
  }));

  useEffect(() => {

    let dir = props.direction;

    if (shoot_r && dir === 'right') {
       api.velocity.set(-8, 0, 0);
    };
    if (shoot_l && dir === 'left') {
       api.velocity.set(5, 0, 0);
    };
    if (reset && dir === 'right') {
       api.position.set(13, 7, 0);
       api.velocity.set(0, 0, 0);
    };
    if (reset && dir === 'left') {
       api.position.set(-10.5, -7.5, 0);
       api.velocity.set(0, 0, 0);
    };

  }, [
        props.position, props.direction, api.velocity, api.position, shoot_r, shoot_l, reset
     ]
  );

  const { nodes, materials } = useGLTF('../../3DModels/Level_1/Fireball/scene.gltf');

  return (
    <group name='Fireball' visible={props.visibillity} ref={group} {...props} scale={[0.05, 0.05, 0.05]} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group position={[0, 0, 0]}>
          <group rotation={[Math.PI / 2, 0, 0]}>
            <group rotation={[-Math.PI / 2, 0, 0]} scale={[10, 10, 10]}>
              <mesh geometry={nodes.Cube_Shading_0.geometry} material={materials.Shading} />
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};

useGLTF.preload('../../3DModels/Level_1/Fireball/scene.gltf');